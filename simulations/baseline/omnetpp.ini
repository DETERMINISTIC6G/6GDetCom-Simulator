[General]
network = d6g.simulations.baseline.Baseline
sim-time-limit = 10s
description = "Baseline Scenario with 6gDetCom node"

**.bridging.pairwiseDelayLayer.egress.delay = 1ms

*.histogram.typename="Histogram"
*.histogram.histogramConfig = xmldoc("example-hist.xml")

**.displayGateSchedules = true
**.gateFilter = "**.eth[1].**"
**.gateScheduleVisualizer.height = 16
**.gateScheduleVisualizer.placementHint = "top"

# client applications
*.talker.numApps = 1
*.talker.app[0].typename = "UdpSourceApp"
*.talker.app[0].io.destAddress = "listener"
*.talker.app[0].io.destPort = 1000
*.talker.app[0].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.talker.app[0].source.productionInterval = 10ms



# server applications
*.listener.numApps = 1
*.listener.app[0].typename = "UdpSinkApp"
*.listener.app[0].io.localPort = 1000


# enable outgoing streams
*.client.hasOutgoingStreams = true

# client stream identification
*.client.bridging.streamIdentifier.identifier.mapping = [{stream: "best effort", packetFilter: expr(udp.destPort == 1000)},
                                                         {stream: "video", packetFilter: expr(udp.destPort == 1001)}]

# client stream encoding
*.client.bridging.streamCoder.encoder.mapping = [{stream: "best effort", pcp: 0},
                                                 {stream: "video", pcp: 4}]

# enable egress traffic shaping
*.switch.hasEgressTrafficShaping = true

# disable forwarding IEEE 802.1Q C-Tag
*.switch.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]

# time-aware traffic shaping
*.switch.eth[*].macLayer.queue.numTrafficClasses = 2