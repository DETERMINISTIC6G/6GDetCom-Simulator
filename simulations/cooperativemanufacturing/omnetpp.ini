[General]
network = d6g.simulations.cooperativemanufacturing.CooperativeManufacturing
sim-time-limit = 10s
description = "Baseline Scenario with 6gDetCom node"

**.bridging.pairwiseDelayLayer.egress.delay = 1ms

**.displayGateSchedules = true
**.gateFilter = "**.eth[1].**"
**.gateScheduleVisualizer.height = 16
**.gateScheduleVisualizer.placementHint = "top"

# client applications
*.agv1.interAgv.numApps = 2
*.agv2.interAgv.numApps = 2

*.agv1.interToCell.numApps = 2
*.agv2.interToCell.numApps = 2

*.processingCell.swarmStatus.numApps = 2
*.processingCell.swarmControl.numApps = 2

# inter agv 1 to 2
*.agv1.interAgv.app[0].typename = "UdpSourceApp"
*.agv1.interAgv.app[0].display-name = "interAgv1"
*.agv1.interAgv.app[0].io.destAddress = "agv2.interAgv"
*.agv1.interAgv.app[0].io.destPort = 1000
*.agv1.interAgv.app[0].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.agv1.interAgv.app[0].source.productionInterval = 10ms

*.agv2.interAgv.app[0].typename = "UdpSinkApp"
*.agv2.interAgv.app[0].io.localPort = 1000


# interagv 2 to 1
*.agv2.interAgv.app[1].typename = "UdpSourceApp"
*.agv2.interAgv.app[1].display-name = "interAgv2"
*.agv2.interAgv.app[1].io.destAddress = "agv1.interAgv"
*.agv2.interAgv.app[1].io.destPort = 1000
*.agv2.interAgv.app[1].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.agv2.interAgv.app[1].source.productionInterval = 10ms

*.agv1.interAgv.app[1].typename = "UdpSinkApp"
*.agv1.interAgv.app[1].io.localPort = 1000


# swarm status
*.agv1.interToCell.app[0].typename = "UdpSourceApp"
*.agv1.interToCell.app[0].display-name = "swarmStatus1"
*.agv1.interToCell.app[0].io.destAddress = "processingCell.swarmStatus"
*.agv1.interToCell.app[0].io.destPort = 1000
*.agv1.interToCell.app[0].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.agv1.interToCell.app[0].source.productionInterval = 10ms

*.processingCell.swarmStatus.app[0].typename = "UdpSinkApp"
*.processingCell.swarmStatus.app[0].io.localPort = 1000

*.agv2.interToCell.app[0].typename = "UdpSourceApp"
*.agv2.interToCell.app[0].display-name = "swarmStatus2"
*.agv2.interToCell.app[0].io.destAddress = "processingCell.swarmStatus"
*.agv2.interToCell.app[0].io.destPort = 1001
*.agv2.interToCell.app[0].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.agv2.interToCell.app[0].source.productionInterval = 10ms

*.processingCell.swarmStatus.app[1].typename = "UdpSinkApp"
*.processingCell.swarmStatus.app[1].io.localPort = 1001


# swarm control
*.processingCell.swarmControl.app[0].typename = "UdpSourceApp"
*.processingCell.swarmControl.app[0].display-name = "swarmControl1"
*.processingCell.swarmControl.app[0].io.destAddress = "agv1.interToCell"
*.processingCell.swarmControl.app[0].io.destPort = 1000
*.processingCell.swarmControl.app[0].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.processingCell.swarmControl.app[0].source.productionInterval = 10ms

*.agv1.interToCell.app[1].typename = "UdpSinkApp"
*.agv1.interToCell.app[1].io.localPort = 1000

*.processingCell.swarmControl.app[1].typename = "UdpSourceApp"
*.processingCell.swarmControl.app[1].display-name = "swarmControl2"
*.processingCell.swarmControl.app[1].io.destAddress = "agv2.interToCell"
*.processingCell.swarmControl.app[1].io.destPort = 1000
*.processingCell.swarmControl.app[1].source.packetLength = 1000B - 54B # 54B = 8B (UDP) + 20B (IP) + 14B (ETH MAC) + 4B (ETH FCS) + 8B (ETH PHY)
*.processingCell.swarmControl.app[1].source.productionInterval = 10ms

*.agv2.interToCell.app[1].typename = "UdpSinkApp"
*.agv2.interToCell.app[1].io.localPort = 1000




# enable outgoing streams
*.client.hasOutgoingStreams = true

# enable egress traffic shaping
*.switch.hasEgressTrafficShaping = true

# disable forwarding IEEE 802.1Q C-Tag
*.switch.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]

# time-aware traffic shaping
*.switch.eth[*].macLayer.queue.numTrafficClasses = 2