[General]
network = d6g.simulations.training_day.tutorial1.NetworkTask1
sim-time-limit = 10s
description = "Tutorial 1"

#################################################################
# Task 1: Setting Up Talkers and Listeners
#################################################################

[Task1]
# Listener Applications
*.listener.numApps = 2
*.listener.app[*].typename = "UdpSinkApp"
*.listener.app[0].io.localPort = 1042
*.listener.app[1].io.localPort = 1043

#[Task1b]
#extends = Task1
#*.talker.numApps = 2
#*.talker.app[*].typename = "UdpSourceApp"
#*.talker.app[*].io.destAddress = <TODO: Subtask b>
#*.talker.app[*].source.packetLength = <TODO: Subtask b>
#
#[Task1c]
#extends = Task1b
#*.talker.app[0].display-name = "time-triggered"
#*.talker.app[0].io.destPort = <TODO: Subtask c>
#*.talker.app[0].source.productionInterval = <TODO: Subtask c>
#
#[Task1d]
#extends = Task1c
#*.talker.app[1].display-name = "bursty"
#*.talker.app[1].io.destPort = <TODO: Subtask d>
#*.talker.app[1].source.productionInterval = <TODO: Subtask d>


#################################################################
# Task 2: Strict Priority Transmission Selection
#################################################################

#[Task2]
#extends = Task1d
#network = d6g.simulations.training_day.solution1.NetworkTask2
#
#*.listener.numApps = 3
#*.listener.app[2].io.localPort = 1044

#[Task2a]
#extends = Task2
#*.babblingTalker.numApps = 1
#*.babblingTalker.hasOutgoingStreams = true
#*.babblingTalker.app[0].typename = <TODO: Subtask a>
#*.babblingTalker.app[0].io.destAddress = <TODO: Subtask a>
#*.babblingTalker.app[0].source.packetLength = <TODO: Subtask a>
#*.babblingTalker.app[0].source.productionInterval = <TODO: Subtask a>
#*.babblingTalker.app[0].io.destPort = <TODO: Subtask a>

#[Task2b]
#extends = Task2a
#**.bridging.directionReverser.reverser.excludeEncapsulationProtocols = ["ieee8021qctag"]
#
#**.hasEgressTrafficShaping = true
#**.eth[*].macLayer.queue.numTrafficClasses = <TODO: Subtask b>
#**.eth[*].macLayer.queue.*[0].display-name = <TODO: Subtask b>
#**.eth[*].macLayer.queue.*[1].display-name = <TODO: Subtask b>
#**.eth[*].macLayer.queue.*[2].display-name = <TODO: Subtask b>
#
#*.talker.bridging.streamIdentifier.identifier.mapping = [{stream: "time-triggered", packetFilter: expr(<TODO: Subtask b>)},
#                                                         {stream: "bursty", packetFilter: expr(<TODO: Subtask b>)}]
#*.talker.bridging.streamCoder.encoder.mapping = [{stream: "time-triggered", pcp: <TODO: Subtask b>},
#                                                 {stream: "bursty", pcp: <TODO: Subtask b>}]
#
#*.babblingTalker.bridging.streamIdentifier.identifier.mapping = [{stream: "best-effort", packetFilter: expr(<TODO: Subtask b>)}]
#*.babblingTalker.bridging.streamCoder.encoder.mapping = [{stream: "best-effort", pcp: <TODO: Subtask b>}]


#################################################################
# Task 3: Time-Aware Shaper and Credit-Based Shaper
#################################################################

#[Task3]
#extends = Task2b
#
#**.displayGateSchedules = true
#**.gateFilter = "**.eth[2].**"
#**.gateScheduleVisualizer.height = 16
#**.gateScheduleVisualizer.placementHint = "top"
#
#*.talker.eth[*].macLayer.queue.transmissionGate[2].offset = 0us
#*.talker.eth[*].macLayer.queue.transmissionGate[2].durations = [10us, 9990us]
#*.talker.eth[*].macLayer.queue.transmissionGate[0..1].offset = 9990us
#*.talker.eth[*].macLayer.queue.transmissionGate[0..1].durations = [9990us, 10us]

#[Task3a]
#extends = Task3
#
#*.bridge.eth[*].macLayer.queue.transmissionGate[2].offset = <TODO: Subtask a>
#*.bridge.eth[*].macLayer.queue.transmissionGate[2].durations = <TODO: Subtask a>
#*.bridge.eth[*].macLayer.queue.transmissionGate[0..1].offset = <TODO: Subtask a>
#*.bridge.eth[*].macLayer.queue.transmissionGate[0..1].durations = <TODO: Subtask a>

#[Task3b]
#extends = Task3a
#
#**.displayGateSchedules = false
#
#*.bridge.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].typename = "Ieee8021qCreditBasedShaper"
#*.bridge.eth[*].macLayer.queue.transmissionSelectionAlgorithm[1].idleSlope = <TODO: Subtask b>
