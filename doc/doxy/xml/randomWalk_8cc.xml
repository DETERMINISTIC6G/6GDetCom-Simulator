<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="randomWalk_8cc" kind="file" language="C++">
    <compoundname>randomWalk.cc</compoundname>
    <includes refid="randomWalk_8h" local="yes">randomWalk.h</includes>
    <includes local="no">omnetpp.h</includes>
    <incdepgraph>
      <node id="3">
        <label>inet/queueing/base/PacketDelayerBase.h</label>
      </node>
      <node id="1">
        <label>src/distribution/randomWalk.cc</label>
        <link refid="randomWalk_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>omnetpp.h</label>
      </node>
      <node id="2">
        <label>randomWalk.h</label>
        <link refid="randomWalk_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innernamespace refid="namespaced6g">d6g</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>Lesser<sp/>General<sp/>Public<sp/>License</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>http://www.gnu.org/licenses/.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="randomWalk_8h" kindref="compound">randomWalk.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;omnetpp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaced6g" kindref="compound">d6g</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">std::map&lt;std::string,<sp/>cValue&gt;<sp/><ref refid="classd6g_1_1randomWalk_1aec72b9789a5cfb0eb6cd57b33897f836" kindref="member">randomWalk::lastDelays</ref>;<sp/><sp/></highlight><highlight class="comment">//<sp/>key<sp/>for<sp/>different<sp/>modules<sp/>which<sp/>call<sp/>the<sp/>randomWalk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">cValue<sp/><ref refid="classd6g_1_1randomWalk_1ad099401aa93d644d6ba59eee7790f8b5" kindref="member">randomWalk::ned_randomWalk</ref>(cComponent<sp/>*context,<sp/>cNEDValue<sp/>argv[],<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="UdpEdgeCloudApp_8ned_1aae485166d641cd6764c6ae085ea41eef" kindref="member">unit</ref><sp/>=<sp/>argv[1].getUnit();</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>key<sp/>=<sp/>context-&gt;getFullPath();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>+=<sp/>argv[2].stringValue();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>key<sp/>is<sp/>already<sp/>in<sp/>the<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classd6g_1_1randomWalk_1aec72b9789a5cfb0eb6cd57b33897f836" kindref="member">lastDelays</ref>.find(key)<sp/>==<sp/><ref refid="classd6g_1_1randomWalk_1aec72b9789a5cfb0eb6cd57b33897f836" kindref="member">lastDelays</ref>.end())<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>not,<sp/>add<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>initialDelay<sp/>=<sp/>argv[0].doubleValueInUnit(<ref refid="UdpEdgeCloudApp_8ned_1aae485166d641cd6764c6ae085ea41eef" kindref="member">unit</ref>);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classd6g_1_1randomWalk_1aec72b9789a5cfb0eb6cd57b33897f836" kindref="member">lastDelays</ref>[key]<sp/>=<sp/>cValue(initialDelay,<sp/><ref refid="UdpEdgeCloudApp_8ned_1aae485166d641cd6764c6ae085ea41eef" kindref="member">unit</ref>);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>lastDelay<sp/>=<sp/><ref refid="classd6g_1_1randomWalk_1aec72b9789a5cfb0eb6cd57b33897f836" kindref="member">lastDelays</ref>[key].doubleValueInUnit(<ref refid="UdpEdgeCloudApp_8ned_1aae485166d641cd6764c6ae085ea41eef" kindref="member">unit</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>the<sp/>new<sp/>delays<sp/>based<sp/>on<sp/>the<sp/>last<sp/>delay<sp/>and<sp/>a<sp/>random<sp/>value<sp/>from<sp/>a<sp/>given<sp/>distribution</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also,<sp/>ensure<sp/>the<sp/>delay<sp/>never<sp/>goes<sp/>below<sp/>0.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>randomWalkNextValue<sp/>=<sp/>argv[1].doubleValueInUnit(<ref refid="UdpEdgeCloudApp_8ned_1aae485166d641cd6764c6ae085ea41eef" kindref="member">unit</ref>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nextDelayDbl<sp/>=<sp/>lastDelay<sp/>+<sp/>randomWalkNextValue;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>cValue<sp/>nextDelay<sp/>=<sp/>cValue(std::max(nextDelayDbl,<sp/>0.0),<sp/><ref refid="UdpEdgeCloudApp_8ned_1aae485166d641cd6764c6ae085ea41eef" kindref="member">unit</ref>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classd6g_1_1randomWalk_1aec72b9789a5cfb0eb6cd57b33897f836" kindref="member">lastDelays</ref>[key]<sp/>=<sp/>nextDelay;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nextDelay;</highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//<sp/>randomWalk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="namespaced6g_1a2dd019b88fee39a0d56641bb3ad90ab1" kindref="member">Define_NED_Function</ref>(<ref refid="classd6g_1_1randomWalk_1ad099401aa93d644d6ba59eee7790f8b5" kindref="member">randomWalk::ned_randomWalk</ref>,<sp/></highlight><highlight class="stringliteral">&quot;quantity<sp/>randomWalk(quantity<sp/>init,<sp/>quantity<sp/>randValue,<sp/>string<sp/>key?)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/></highlight><highlight class="comment">/*<sp/>namespace<sp/>d6g<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/distribution/randomWalk.cc"/>
  </compounddef>
</doxygen>
