stages:
  - docker-base
  - build
  - deploy

variables:
  IMAGE_TAG_OMNETPP_GUI_XVFB: $CI_REGISTRY_IMAGE:omnetpp-gui-xvfb-latest
  # Tell 'docker:dind' to enable TLS (recommended)
  # and generate certificates in the specified directory.
  DOCKER_TLS_CERTDIR: "/certs"


# Disable for now until docker registry is enabled
#build-docker-omnetpp-gui-xvfb:
#  stage: docker-base
#  rules:
#    - changes:
#        - dockerfiles/omnetpp-gui-xvfb/*
#        - .gitlab-ci.yml
#  image: docker:latest
#  services:
#    - docker:dind
#  script:
#    - cd dockerfiles/omnetpp-gui-xvfb
#    - echo $CI_REGISTRY
#    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
#    - docker build -t $IMAGE_TAG_OMNETPP_GUI_XVFB .
#    - docker push $IMAGE_TAG_OMNETPP_GUI_XVFB
#  tags:
#    - d6g
#    - docker


pages:
  only:
    - documentation
    - main
  stage: build
  script:
    - (cd ..; git clone --depth 1 --branch v4.5.0 https://github.com/inet-framework/inet.git;)
    - xvfb-run make doc
  after_script:
    - rm -rf ../inet
  artifacts:
    paths:
      - public
  tags:
    - d6g
    - shell

deploy_ipvs_pages:
  variables:
    DEPLOYMENT_PATH: /mnt/www_d6g/$CI_PROJECT_PATH
  stage: deploy
  dependencies:
    - pages
  environment:
    name: production
    url: "https://ipvs.informatik.uni-stuttgart.de/vs/deterministic6g/$CI_PROJECT_PATH"
  only:
    - main
    - documentation
  script:
    - rm -rf $DEPLOYMENT_PATH
    - mkdir -p $DEPLOYMENT_PATH
    - cp -r public/. $DEPLOYMENT_PATH
  tags:
    - d6g
    - docker
    - web
